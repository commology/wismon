#!/usr/bin/env node
var debug = require('debug')('wismon-oai');
var https = require('https');
var fs = require('fs');

var cronjob = require('node-crontab');
var crontab = require('crontab');

var utl = require('../modules/wismon_utl.js');
var log = require('../modules/wismon_logger.js');
var oaih = require('../modules/wismon_oai_harvester.js');

var cfg = require('../modules/wismon_config.js');

var installCRONTAB = function () {
  var centreIDs = cfg.getCentreIDs();
  for (var i = 0; i < centreIDs.length; i++) {
    var key = centreIDs[i];
    if (!cfg.getCentreCRONTAB(key, 'OAI_PROVIDER'))
      continue;
    cronjob.scheduleJob(cfg.getCentreCRONTAB(key, 'OAI_PROVIDER'), function (centreID) {
      oaih.harvestMetadataHead(centreID, cfg.getCentreURL(centreID, 'OAI_PROVIDER'));
      log.info('Metadata automatically harvest from ' + centreID);
      //console.log(JSON.stringify(monjson, null, '  '));
    }, [key]);
  }
}
installCRONTAB();

var ssl_options = {
  key: fs.readFileSync('ssl/wismon_server.key'),
  cert: fs.readFileSync('ssl/wismon_server.crt'),
  ca: fs.readFileSync('ssl/wismon_ca.crt'),
  requestCert: true,
  rejectUnauthorizaed: false
};

var server_ssl = https.createServer(ssl_options).listen(8444, function() {
  debug('OAI-PMH Daemon server SSL listening on port ' + server_ssl.address().port);
});

